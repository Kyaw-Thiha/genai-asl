/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as UnitsIndexImport } from './routes/units/index'
import { Route as WordsAImport } from './routes/words/a'
import { Route as UnitsNumbersImport } from './routes/units/numbers'
import { Route as UnitsIntroImport } from './routes/units/intro'
import { Route as UnitsColoursImport } from './routes/units/colours'
import { Route as UnitsAlphabetsImport } from './routes/units/alphabets'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UnitsIndexRoute = UnitsIndexImport.update({
  id: '/units/',
  path: '/units/',
  getParentRoute: () => rootRoute,
} as any)

const WordsARoute = WordsAImport.update({
  id: '/words/a',
  path: '/words/a',
  getParentRoute: () => rootRoute,
} as any)

const UnitsNumbersRoute = UnitsNumbersImport.update({
  id: '/units/numbers',
  path: '/units/numbers',
  getParentRoute: () => rootRoute,
} as any)

const UnitsIntroRoute = UnitsIntroImport.update({
  id: '/units/intro',
  path: '/units/intro',
  getParentRoute: () => rootRoute,
} as any)

const UnitsColoursRoute = UnitsColoursImport.update({
  id: '/units/colours',
  path: '/units/colours',
  getParentRoute: () => rootRoute,
} as any)

const UnitsAlphabetsRoute = UnitsAlphabetsImport.update({
  id: '/units/alphabets',
  path: '/units/alphabets',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/units/alphabets': {
      id: '/units/alphabets'
      path: '/units/alphabets'
      fullPath: '/units/alphabets'
      preLoaderRoute: typeof UnitsAlphabetsImport
      parentRoute: typeof rootRoute
    }
    '/units/colours': {
      id: '/units/colours'
      path: '/units/colours'
      fullPath: '/units/colours'
      preLoaderRoute: typeof UnitsColoursImport
      parentRoute: typeof rootRoute
    }
    '/units/intro': {
      id: '/units/intro'
      path: '/units/intro'
      fullPath: '/units/intro'
      preLoaderRoute: typeof UnitsIntroImport
      parentRoute: typeof rootRoute
    }
    '/units/numbers': {
      id: '/units/numbers'
      path: '/units/numbers'
      fullPath: '/units/numbers'
      preLoaderRoute: typeof UnitsNumbersImport
      parentRoute: typeof rootRoute
    }
    '/words/a': {
      id: '/words/a'
      path: '/words/a'
      fullPath: '/words/a'
      preLoaderRoute: typeof WordsAImport
      parentRoute: typeof rootRoute
    }
    '/units/': {
      id: '/units/'
      path: '/units'
      fullPath: '/units'
      preLoaderRoute: typeof UnitsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/units/alphabets': typeof UnitsAlphabetsRoute
  '/units/colours': typeof UnitsColoursRoute
  '/units/intro': typeof UnitsIntroRoute
  '/units/numbers': typeof UnitsNumbersRoute
  '/words/a': typeof WordsARoute
  '/units': typeof UnitsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/units/alphabets': typeof UnitsAlphabetsRoute
  '/units/colours': typeof UnitsColoursRoute
  '/units/intro': typeof UnitsIntroRoute
  '/units/numbers': typeof UnitsNumbersRoute
  '/words/a': typeof WordsARoute
  '/units': typeof UnitsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/units/alphabets': typeof UnitsAlphabetsRoute
  '/units/colours': typeof UnitsColoursRoute
  '/units/intro': typeof UnitsIntroRoute
  '/units/numbers': typeof UnitsNumbersRoute
  '/words/a': typeof WordsARoute
  '/units/': typeof UnitsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/units/alphabets'
    | '/units/colours'
    | '/units/intro'
    | '/units/numbers'
    | '/words/a'
    | '/units'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/units/alphabets'
    | '/units/colours'
    | '/units/intro'
    | '/units/numbers'
    | '/words/a'
    | '/units'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/units/alphabets'
    | '/units/colours'
    | '/units/intro'
    | '/units/numbers'
    | '/words/a'
    | '/units/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  UnitsAlphabetsRoute: typeof UnitsAlphabetsRoute
  UnitsColoursRoute: typeof UnitsColoursRoute
  UnitsIntroRoute: typeof UnitsIntroRoute
  UnitsNumbersRoute: typeof UnitsNumbersRoute
  WordsARoute: typeof WordsARoute
  UnitsIndexRoute: typeof UnitsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  UnitsAlphabetsRoute: UnitsAlphabetsRoute,
  UnitsColoursRoute: UnitsColoursRoute,
  UnitsIntroRoute: UnitsIntroRoute,
  UnitsNumbersRoute: UnitsNumbersRoute,
  WordsARoute: WordsARoute,
  UnitsIndexRoute: UnitsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/units/alphabets",
        "/units/colours",
        "/units/intro",
        "/units/numbers",
        "/words/a",
        "/units/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/units/alphabets": {
      "filePath": "units/alphabets.tsx"
    },
    "/units/colours": {
      "filePath": "units/colours.tsx"
    },
    "/units/intro": {
      "filePath": "units/intro.tsx"
    },
    "/units/numbers": {
      "filePath": "units/numbers.tsx"
    },
    "/words/a": {
      "filePath": "words/a.tsx"
    },
    "/units/": {
      "filePath": "units/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
